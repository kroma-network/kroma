package derive

import (
	"fmt"
	"math/big"
	"strconv"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/crypto"
	"github.com/ethereum/go-ethereum/params"

	oppredeploys "github.com/ethereum-optimism/optimism/op-bindings/predeploys"
)

const (
	KromaLocalDevnetChainID = 901
)

var (
	L1BlockMPTDeployerAddress        = common.HexToAddress("0x2551000000000000000000000000000000000000")
	BaseFeeVaultDeployerAddress      = common.HexToAddress("0x2551000000000000000000000000000000000001")
	L1FeeVaultDeployerAddress        = common.HexToAddress("0x2551000000000000000000000000000000000002")
	SequencerFeeVaultDeployerAddress = common.HexToAddress("0x2551000000000000000000000000000000000003")

	newL1BlockMPTAddress        = crypto.CreateAddress(L1BlockMPTDeployerAddress, 0)
	newBaseFeeVaultAddress      = crypto.CreateAddress(BaseFeeVaultDeployerAddress, 0)
	newL1FeeVaultAddress        = crypto.CreateAddress(L1FeeVaultDeployerAddress, 0)
	newSequencerFeeVaultAddress = crypto.CreateAddress(SequencerFeeVaultDeployerAddress, 0)

	deployBaseFeeVaultSource           = UpgradeDepositSource{Intent: "KromaMPT: BaseFee Vault Deployment"}
	updateBaseFeeVaultProxySource      = UpgradeDepositSource{Intent: "KromaMPT: BaseFee Vault Proxy Update"}
	deployL1FeeVaultSource             = UpgradeDepositSource{Intent: "KromaMPT: L1 Fee Vault Deployment"}
	updateL1FeeVaultProxySource        = UpgradeDepositSource{Intent: "KromaMPT: L1 Fee Vault Proxy Update"}
	deploySequencerFeeVaultSource      = UpgradeDepositSource{Intent: "KromaMPT: Sequencer Fee Vault Deployment"}
	updateSequencerFeeVaultProxySource = UpgradeDepositSource{Intent: "KromaMPT: Sequencer Fee Vault Proxy Update"}
	deployL1BlockMPTSource             = UpgradeDepositSource{Intent: "KromaMPT: L1 Block Deployment"}
	updateL1BlockMPTProxySource        = UpgradeDepositSource{Intent: "KromaMPT: L1 Block Proxy Update"}

	l1BlockMPTDeploymentBytecode        = common.FromHex("0x608060405234801561001057600080fd5b50610624806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639e8c496611610097578063e81b2c6d11610066578063e81b2c6d14610281578063ed579ad31461028a578063efc674eb14610293578063f8206140146102a657600080fd5b80639e8c4966146101f8578063b80777ea14610201578063c598591814610221578063e591b2821461024157600080fd5b806364ca23ef116100d357806364ca23ef1461017d57806368d5dca6146101aa5780638381f58a146101db5780638b239f73146101ef57600080fd5b806309bd5a6014610105578063440a5e201461012157806354fd4d501461012b5780635cf2496914610174575b600080fd5b61010e60025481565b6040519081526020015b60405180910390f35b6101296102af565b005b6101676040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b604051610118919061050b565b61010e60015481565b6003546101919067ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610118565b6003546101c69068010000000000000000900463ffffffff1681565b60405163ffffffff9091168152602001610118565b6000546101919067ffffffffffffffff1681565b61010e60055481565b61010e60065481565b6000546101919068010000000000000000900467ffffffffffffffff1681565b6003546101c6906c01000000000000000000000000900463ffffffff1681565b61025c73deaddeaddeaddeaddeaddeaddeaddeaddead000181565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610118565b61010e60045481565b61010e60075481565b6101296102a136600461059b565b61030a565b61010e60085481565b3373deaddeaddeaddeaddeaddeaddeaddeaddead0001146102d857633cc50b456000526004601cfd5b60043560801c60035560143560801c60005560243560015560443560085560643560025560843560045560a435600755565b3373deaddeaddeaddeaddeaddeaddeaddeaddead0001146103b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4c31426c6f636b3a206f6e6c7920746865206465706f7369746f72206163636f60448201527f756e742063616e20736574204c3120626c6f636b2076616c756573000000000060648201526084015b60405180910390fd5b61271081111561046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4c31426c6f636b3a20746865206d61782076616c7565206f662076616c69646160448201527f746f7220726577617264207363616c617220686173206265656e20657863656560648201527f6465640000000000000000000000000000000000000000000000000000000000608482015260a4016103a9565b6000805467ffffffffffffffff998a1668010000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009091169a8a169a909a179990991790985560019590955560029390935560038054929095167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009290921691909117909355600492909255600591909155600655600755565b600060208083528351808285015260005b818110156105385785810183015185820160400152820161051c565b8181111561054a576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803567ffffffffffffffff8116811461059657600080fd5b919050565b60008060008060008060008060006101208a8c0312156105ba57600080fd5b6105c38a61057e565b98506105d160208b0161057e565b975060408a0135965060608a013595506105ed60808b0161057e565b989b979a50959894979660a0860135965060c08601359560e081013595506101000135935091505056fea164736f6c634300080f000a")
	sequencerFeeVaultDeploymentBytecode = common.FromHex("0x61012060405234801561001157600080fd5b50604051610b0f380380610b0f8339810160408190526100309161005b565b600060808190526001600160a01b0390911660a052600160c081905260e0919091526101005261008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b60805160a05160c05160e05161010051610a176100f860003960006103620152600061033901526000610310015260008181608701528181610191015281816102a7015281816103c4015281816104840152610623015260008181610157015261052b0152610a176000f3fe6080604052600436106100695760003560e01c80636ed39f62116100435780636ed39f621461010c57806384411d6514610121578063d3e5792b1461014557600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e8610179565b005b3480156100f657600080fd5b506100ff610309565b6040516100ca91906108c8565b34801561011857600080fd5b506100e86103ac565b34801561012d57600080fd5b5061013760005481565b6040519081526020016100ca565b34801561015157600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600061024d610527565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081529192507342000000000000000000000000000000000000099163e11013dd9184916102d4917f0000000000000000000000000000000000000000000000000000000000000000916188b891906004016108e2565b6000604051808303818588803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050505050565b60606103347f0000000000000000000000000000000000000000000000000000000000000000610693565b61035d7f0000000000000000000000000000000000000000000000000000000000000000610693565b6103867f0000000000000000000000000000000000000000000000000000000000000000610693565b60405160200161039893929190610926565b604051602081830303815290604052905090565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c000000000000000000000000000000000000000000000000000000606482015260840161023a565b600061047b610527565b905060006104ba7f00000000000000000000000000000000000000000000000000000000000000005a8460405180602001604052806000815250610751565b905080610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4665655661756c743a20455448207472616e73666572206661696c6564000000604482015260640161023a565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000004710156105ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40161023a565b600047905080600080828254610615919061099c565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a1919050565b606060006106a08361076b565b600101905060008167ffffffffffffffff8111156106c0576106c06109db565b6040519080825280601f01601f1916602001820160405280156106ea576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846106f457509392505050565b600080600080845160208601878a8af19695505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106107b4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106107e0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106107fe57662386f26fc10000830492506010015b6305f5e1008310610816576305f5e100830492506008015b612710831061082a57612710830492506004015b6064831061083c576064830492506002015b600a8310610848576001015b92915050565b60005b83811015610869578181015183820152602001610851565b83811115610878576000848401525b50505050565b6000815180845261089681602086016020860161084e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108db602083018461087e565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff8316602082015260606040820152600061091d606083018461087e565b95945050505050565b6000845161093881846020890161084e565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610974816001850160208a0161084e565b6001920191820152835161098f81600284016020880161084e565b0160020195945050505050565b600082198211156109d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300080f000a")
	baseFeeVaultDeploymentBytecode      = common.FromHex("0x61012060405234801561001157600080fd5b50604051610b0f380380610b0f8339810160408190526100309161005b565b600060808190526001600160a01b0390911660a052600160c081905260e0919091526101005261008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b60805160a05160c05160e05161010051610a176100f860003960006103620152600061033901526000610310015260008181608701528181610191015281816102a7015281816103c4015281816104840152610623015260008181610157015261052b0152610a176000f3fe6080604052600436106100695760003560e01c80636ed39f62116100435780636ed39f621461010c57806384411d6514610121578063d3e5792b1461014557600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e8610179565b005b3480156100f657600080fd5b506100ff610309565b6040516100ca91906108c8565b34801561011857600080fd5b506100e86103ac565b34801561012d57600080fd5b5061013760005481565b6040519081526020016100ca565b34801561015157600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600061024d610527565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081529192507342000000000000000000000000000000000000099163e11013dd9184916102d4917f0000000000000000000000000000000000000000000000000000000000000000916188b891906004016108e2565b6000604051808303818588803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050505050565b60606103347f0000000000000000000000000000000000000000000000000000000000000000610693565b61035d7f0000000000000000000000000000000000000000000000000000000000000000610693565b6103867f0000000000000000000000000000000000000000000000000000000000000000610693565b60405160200161039893929190610926565b604051602081830303815290604052905090565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c000000000000000000000000000000000000000000000000000000606482015260840161023a565b600061047b610527565b905060006104ba7f00000000000000000000000000000000000000000000000000000000000000005a8460405180602001604052806000815250610751565b905080610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4665655661756c743a20455448207472616e73666572206661696c6564000000604482015260640161023a565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000004710156105ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40161023a565b600047905080600080828254610615919061099c565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a1919050565b606060006106a08361076b565b600101905060008167ffffffffffffffff8111156106c0576106c06109db565b6040519080825280601f01601f1916602001820160405280156106ea576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846106f457509392505050565b600080600080845160208601878a8af19695505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106107b4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106107e0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106107fe57662386f26fc10000830492506010015b6305f5e1008310610816576305f5e100830492506008015b612710831061082a57612710830492506004015b6064831061083c576064830492506002015b600a8310610848576001015b92915050565b60005b83811015610869578181015183820152602001610851565b83811115610878576000848401525b50505050565b6000815180845261089681602086016020860161084e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108db602083018461087e565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff8316602082015260606040820152600061091d606083018461087e565b95945050505050565b6000845161093881846020890161084e565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610974816001850160208a0161084e565b6001920191820152835161098f81600284016020880161084e565b0160020195945050505050565b600082198211156109d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300080f000a")
	l1FeeVaultDeploymentBytecode        = common.FromHex("0x61012060405234801561001157600080fd5b50604051610b0c380380610b0c83398101604081905261003091610058565b600060808190526001600160a01b0390911660a052600160c05260e052600261010052610088565b60006020828403121561006a57600080fd5b81516001600160a01b038116811461008157600080fd5b9392505050565b60805160a05160c05160e05161010051610a176100f560003960006103620152600061033901526000610310015260008181608701528181610191015281816102a7015281816103c4015281816104840152610623015260008181610157015261052b0152610a176000f3fe6080604052600436106100695760003560e01c80636ed39f62116100435780636ed39f621461010c57806384411d6514610121578063d3e5792b1461014557600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e8610179565b005b3480156100f657600080fd5b506100ff610309565b6040516100ca91906108c8565b34801561011857600080fd5b506100e86103ac565b34801561012d57600080fd5b5061013760005481565b6040519081526020016100ca565b34801561015157600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600061024d610527565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081529192507342000000000000000000000000000000000000099163e11013dd9184916102d4917f0000000000000000000000000000000000000000000000000000000000000000916188b891906004016108e2565b6000604051808303818588803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050505050565b60606103347f0000000000000000000000000000000000000000000000000000000000000000610693565b61035d7f0000000000000000000000000000000000000000000000000000000000000000610693565b6103867f0000000000000000000000000000000000000000000000000000000000000000610693565b60405160200161039893929190610926565b604051602081830303815290604052905090565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4665655661756c743a20746865206f6e6c7920726563697069656e742063616e60448201527f2063616c6c000000000000000000000000000000000000000000000000000000606482015260840161023a565b600061047b610527565b905060006104ba7f00000000000000000000000000000000000000000000000000000000000000005a8460405180602001604052806000815250610751565b905080610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4665655661756c743a20455448207472616e73666572206661696c6564000000604482015260640161023a565b5050565b60007f00000000000000000000000000000000000000000000000000000000000000004710156105ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40161023a565b600047905080600080828254610615919061099c565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a1919050565b606060006106a08361076b565b600101905060008167ffffffffffffffff8111156106c0576106c06109db565b6040519080825280601f01601f1916602001820160405280156106ea576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846106f457509392505050565b600080600080845160208601878a8af19695505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106107b4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106107e0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106107fe57662386f26fc10000830492506010015b6305f5e1008310610816576305f5e100830492506008015b612710831061082a57612710830492506004015b6064831061083c576064830492506002015b600a8310610848576001015b92915050565b60005b83811015610869578181015183820152602001610851565b83811115610878576000848401525b50505050565b6000815180845261089681602086016020860161084e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108db602083018461087e565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff8316602082015260606040820152600061091d606083018461087e565b95945050505050565b6000845161093881846020890161084e565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610974816001850160208a0161084e565b6001920191820152835161098f81600284016020880161084e565b0160020195945050505050565b600082198211156109d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300080f000a")
)

var ChainConfigs = map[string]ChainConfig{
	strconv.Itoa(KromaLocalDevnetChainID): { // Local devnet (Default)
		protocolVaultRecipient: common.HexToAddress("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"),
		l1FeeVaultRecipient:    common.HexToAddress("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"),
	},
	strconv.Itoa(params.KromaMainnetChainID): { // Kroma
		protocolVaultRecipient: common.HexToAddress("0xA03c13C6597a0716D1525b7fDaD2fD95ECb49081"),
		l1FeeVaultRecipient:    common.HexToAddress("0xA03c13C6597a0716D1525b7fDaD2fD95ECb49081"),
	},
	strconv.Itoa(params.KromaSepoliaChainID): { // Kroma Sepolia
		protocolVaultRecipient: common.HexToAddress("0xb5d7c1921fdbdea614f264a75ca0be416cf63eb5"),
		l1FeeVaultRecipient:    common.HexToAddress("0xb5d7c1921fdbdea614f264a75ca0be416cf63eb5"),
	},
	strconv.Itoa(params.KromaDevnetChainID): { // Kroma Holesky
		protocolVaultRecipient: common.HexToAddress("0x69487D0D1F969E99D3b68C4F79F0F47375c4Ee4A"),
		l1FeeVaultRecipient:    common.HexToAddress("0x69487D0D1F969E99D3b68C4F79F0F47375c4Ee4A"),
	},
}

// ChainConfig constructor arguments mapping by ChainID
type ChainConfig struct {
	protocolVaultRecipient common.Address
	l1FeeVaultRecipient    common.Address
}

// DeploymentData deployment bytecode information including constructor arguments
type DeploymentData struct {
	sequencerFeeVaultDeploymentBytecodeWithArg []byte
	baseFeeVaultDeploymentBytecodeWithArg      []byte
	l1FeeVaultDeploymentBytecodeWithArg        []byte
}

// getDeploymentData retrieves data that is necessary for deployments of predeploy contracts
// at the previous block of Kroma MPT upgrade.
func getDeploymentData(chainID *big.Int) (*DeploymentData, error) {
	chainConfig, exists := ChainConfigs[chainID.String()]
	if !exists {
		chainConfig = ChainConfigs[strconv.Itoa(KromaLocalDevnetChainID)] // Default to local devnet configuration
	}

	sequencerBytecode, err := createDeploymentBytecode(sequencerFeeVaultDeploymentBytecode, chainConfig.protocolVaultRecipient)
	if err != nil {
		return nil, fmt.Errorf("failed to create sequencerFeeVault deployment bytecode: %w", err)
	}

	baseFeeBytecode, err := createDeploymentBytecode(baseFeeVaultDeploymentBytecode, chainConfig.protocolVaultRecipient)
	if err != nil {
		return nil, fmt.Errorf("failed to create baseFeeVault deployment bytecode: %w", err)
	}

	l1FeeBytecode, err := createDeploymentBytecode(l1FeeVaultDeploymentBytecode, chainConfig.l1FeeVaultRecipient)
	if err != nil {
		return nil, fmt.Errorf("failed to create l1FeeVault deployment bytecode: %w", err)
	}

	return &DeploymentData{
		sequencerFeeVaultDeploymentBytecodeWithArg: sequencerBytecode,
		baseFeeVaultDeploymentBytecodeWithArg:      baseFeeBytecode,
		l1FeeVaultDeploymentBytecodeWithArg:        l1FeeBytecode,
	}, nil
}

// createDeploymentBytecode returns the result, including information about the constructor arguments
// in the deploymentByteCode.
func createDeploymentBytecode(bytecode []byte, args ...interface{}) ([]byte, error) {
	encodedArgs, err := encodeConstructorArg(args...)
	if err != nil {
		return nil, err
	}
	// combine bytecode with encoded arguments
	deploymentBytecode := append(bytecode, encodedArgs...)
	return deploymentBytecode, nil
}

func encodeConstructorArg(args ...interface{}) ([]byte, error) {
	// define ABI arguments dynamically based on the types of args
	constructorArgs := abi.Arguments{}

	for _, arg := range args {
		var argType abi.Type
		var err error

		switch v := arg.(type) {
		case common.Address:
			argType, err = abi.NewType("address", "", nil)
		case uint64:
			argType, err = abi.NewType("uint64", "", nil)
		case *big.Int:
			argType, err = abi.NewType("uint256", "", nil)
		case []byte:
			argType, err = abi.NewType("bytes", "", nil)
		case bool:
			argType, err = abi.NewType("bool", "", nil)
		default:
			return nil, fmt.Errorf("unsupported argument type: %T", v)
		}

		if err != nil {
			return nil, fmt.Errorf("failed to create ABI type for argument: %w", err)
		}

		constructorArgs = append(constructorArgs, abi.Argument{
			Type: argType,
		})
	}

	// pack the arguments into ABI-encoded bytes
	encodedArgs, err := constructorArgs.Pack(args...)
	if err != nil {
		return nil, fmt.Errorf("failed to encode constructor arguments: %w", err)
	}

	return encodedArgs, nil
}

func KromaMPTNetworkUpgradeTransactions(chainID *big.Int) ([]hexutil.Bytes, error) {
	deploymentData, err := getDeploymentData(chainID)
	if err != nil {
		return nil, err
	}

	upgradeTxns := make([]hexutil.Bytes, 0, 8)

	deployL1BlockTransaction, err := types.NewTx(&types.DepositTx{
		SourceHash:          deployL1BlockMPTSource.SourceHash(),
		From:                L1BlockMPTDeployerAddress,
		To:                  nil,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 500_000,
		IsSystemTransaction: false,
		Data:                l1BlockMPTDeploymentBytecode,
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, deployL1BlockTransaction)

	deployBaseFeeVault, err := types.NewTx(&types.DepositTx{
		SourceHash:          deployBaseFeeVaultSource.SourceHash(),
		From:                BaseFeeVaultDeployerAddress,
		To:                  nil,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 1_000_000,
		IsSystemTransaction: false,
		Data:                deploymentData.baseFeeVaultDeploymentBytecodeWithArg,
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, deployBaseFeeVault)

	deployL1FeeVault, err := types.NewTx(&types.DepositTx{
		SourceHash:          deployL1FeeVaultSource.SourceHash(),
		From:                L1FeeVaultDeployerAddress,
		To:                  nil,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 1_000_000,
		IsSystemTransaction: false,
		Data:                deploymentData.l1FeeVaultDeploymentBytecodeWithArg,
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, deployL1FeeVault)

	deploySequencerFeeVault, err := types.NewTx(&types.DepositTx{
		SourceHash:          deploySequencerFeeVaultSource.SourceHash(),
		From:                SequencerFeeVaultDeployerAddress,
		To:                  nil,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 1_000_000,
		IsSystemTransaction: false,
		Data:                deploymentData.sequencerFeeVaultDeploymentBytecodeWithArg,
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, deploySequencerFeeVault)

	updateL1BlockProxy, err := types.NewTx(&types.DepositTx{
		SourceHash:          updateL1BlockMPTProxySource.SourceHash(),
		From:                common.Address{},
		To:                  &oppredeploys.L1BlockAddr,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 50_000,
		IsSystemTransaction: false,
		Data:                upgradeToCalldata(newL1BlockMPTAddress),
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, updateL1BlockProxy)

	updateBaseFeeVaultProxy, err := types.NewTx(&types.DepositTx{
		SourceHash:          updateBaseFeeVaultProxySource.SourceHash(),
		From:                common.Address{},
		To:                  &oppredeploys.BaseFeeVaultAddr,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 50_000,
		IsSystemTransaction: false,
		Data:                upgradeToCalldata(newBaseFeeVaultAddress),
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, updateBaseFeeVaultProxy)

	updateL1FeeVaultProxy, err := types.NewTx(&types.DepositTx{
		SourceHash:          updateL1FeeVaultProxySource.SourceHash(),
		From:                common.Address{},
		To:                  &oppredeploys.L1FeeVaultAddr,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 50_000,
		IsSystemTransaction: false,
		Data:                upgradeToCalldata(newL1FeeVaultAddress),
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, updateL1FeeVaultProxy)

	updateSequencerFeeVaultProxy, err := types.NewTx(&types.DepositTx{
		SourceHash:          updateSequencerFeeVaultProxySource.SourceHash(),
		From:                common.Address{},
		To:                  &oppredeploys.SequencerFeeVaultAddr,
		Mint:                big.NewInt(0),
		Value:               big.NewInt(0),
		Gas:                 50_000,
		IsSystemTransaction: false,
		Data:                upgradeToCalldata(newSequencerFeeVaultAddress),
	}).MarshalBinary()
	if err != nil {
		return nil, err
	}

	upgradeTxns = append(upgradeTxns, updateSequencerFeeVaultProxy)

	return upgradeTxns, nil
}
