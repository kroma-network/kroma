// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// AssetManagerMetaData contains all meta data concerning the AssetManager contract.
var AssetManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_assetToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"_kgh\",\"type\":\"address\",\"internalType\":\"contractIERC721\"},{\"name\":\"_kghManager\",\"type\":\"address\",\"internalType\":\"contractIKGHManager\"},{\"name\":\"_securityCouncil\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_validatorManager\",\"type\":\"address\",\"internalType\":\"contractIValidatorManager\"},{\"name\":\"_undelegationPeriod\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"_slashingRate\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"_minSlashingAmount\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"ASSET_TOKEN\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIERC20\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"DECIMAL_OFFSET\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"KGH\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIERC721\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"KGH_MANAGER\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIKGHManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"MIN_SLASHING_AMOUNT\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"SECURITY_COUNCIL\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"SLASHING_RATE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"SLASHING_RATE_DENOM\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"TAX_DENOMINATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"TAX_NUMERATOR\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"UNDELEGATION_PERIOD\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"VALIDATOR_MANAGER\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIValidatorManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"VKRO_PER_KGH\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"assets\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegateKgh\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegateKghBatch\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenIds\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegateToRegister\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"assets\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"finalizeClaimValidatorReward\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"finalizeUndelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"finalizeUndelegateKgh\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getKghTotalBalance\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getKghTotalShareBalance\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getKroTotalBalance\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getKroTotalShareBalance\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"increaseBalanceWithReward\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"baseReward\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"boostedReward\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"validatorReward\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initClaimValidatorReward\",\"inputs\":[{\"name\":\"amount\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initUndelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"shares\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initUndelegateKgh\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initUndelegateKghBatch\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenIds\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"modifyBalanceWithChallenge\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"challengeReward\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"isLoser\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"},{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"onERC721Received\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"previewDelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"assets\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"previewKghDelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"previewKghUndelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"previewUndelegate\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"shares\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"reflectiveWeight\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"totalKghNum\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"totalKroAssets\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"totalKroInKgh\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"totalValidatorKro\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint128\",\"internalType\":\"uint128\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"event\",\"name\":\"KghBatchDelegated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenIds\",\"type\":\"uint256[]\",\"indexed\":false,\"internalType\":\"uint256[]\"},{\"name\":\"kroShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"kghShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KghBatchUndelegationInitiated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenIds\",\"type\":\"uint256[]\",\"indexed\":false,\"internalType\":\"uint256[]\"},{\"name\":\"kroShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"kghShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KghDelegated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"kroInKgh\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"kroShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"kghShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KghUndelegationFinalized\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KghUndelegationInitiated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"kroShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"kghShares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KroDelegated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"shares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KroUndelegationFinalized\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"KroUndelegationInitiated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"delegator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"},{\"name\":\"shares\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RewardClaimFinalized\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RewardClaimInitiated\",\"inputs\":[{\"name\":\"validator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\",\"indexed\":false,\"internalType\":\"uint128\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"FinalizedPendingNotExists\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ImproperValidatorStatus\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InsufficientAsset\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InsufficientShare\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidConstructorParams\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotAllowedCaller\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotAllowedZeroInput\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"PendingNotExists\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"RequestNotExists\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ShareNotExists\",\"inputs\":[]}]",
	Bin: "",
}

// AssetManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use AssetManagerMetaData.ABI instead.
var AssetManagerABI = AssetManagerMetaData.ABI

// AssetManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use AssetManagerMetaData.Bin instead.
var AssetManagerBin = AssetManagerMetaData.Bin

// DeployAssetManager deploys a new Ethereum contract, binding an instance of AssetManager to it.
func DeployAssetManager(auth *bind.TransactOpts, backend bind.ContractBackend, _assetToken common.Address, _kgh common.Address, _kghManager common.Address, _securityCouncil common.Address, _validatorManager common.Address, _undelegationPeriod *big.Int, _slashingRate *big.Int, _minSlashingAmount *big.Int) (common.Address, *types.Transaction, *AssetManager, error) {
	parsed, err := AssetManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(AssetManagerBin), backend, _assetToken, _kgh, _kghManager, _securityCouncil, _validatorManager, _undelegationPeriod, _slashingRate, _minSlashingAmount)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AssetManager{AssetManagerCaller: AssetManagerCaller{contract: contract}, AssetManagerTransactor: AssetManagerTransactor{contract: contract}, AssetManagerFilterer: AssetManagerFilterer{contract: contract}}, nil
}

// AssetManager is an auto generated Go binding around an Ethereum contract.
type AssetManager struct {
	AssetManagerCaller     // Read-only binding to the contract
	AssetManagerTransactor // Write-only binding to the contract
	AssetManagerFilterer   // Log filterer for contract events
}

// AssetManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type AssetManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AssetManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AssetManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AssetManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AssetManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AssetManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AssetManagerSession struct {
	Contract     *AssetManager     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AssetManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AssetManagerCallerSession struct {
	Contract *AssetManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// AssetManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AssetManagerTransactorSession struct {
	Contract     *AssetManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// AssetManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type AssetManagerRaw struct {
	Contract *AssetManager // Generic contract binding to access the raw methods on
}

// AssetManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AssetManagerCallerRaw struct {
	Contract *AssetManagerCaller // Generic read-only contract binding to access the raw methods on
}

// AssetManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AssetManagerTransactorRaw struct {
	Contract *AssetManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAssetManager creates a new instance of AssetManager, bound to a specific deployed contract.
func NewAssetManager(address common.Address, backend bind.ContractBackend) (*AssetManager, error) {
	contract, err := bindAssetManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AssetManager{AssetManagerCaller: AssetManagerCaller{contract: contract}, AssetManagerTransactor: AssetManagerTransactor{contract: contract}, AssetManagerFilterer: AssetManagerFilterer{contract: contract}}, nil
}

// NewAssetManagerCaller creates a new read-only instance of AssetManager, bound to a specific deployed contract.
func NewAssetManagerCaller(address common.Address, caller bind.ContractCaller) (*AssetManagerCaller, error) {
	contract, err := bindAssetManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AssetManagerCaller{contract: contract}, nil
}

// NewAssetManagerTransactor creates a new write-only instance of AssetManager, bound to a specific deployed contract.
func NewAssetManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*AssetManagerTransactor, error) {
	contract, err := bindAssetManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AssetManagerTransactor{contract: contract}, nil
}

// NewAssetManagerFilterer creates a new log filterer instance of AssetManager, bound to a specific deployed contract.
func NewAssetManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*AssetManagerFilterer, error) {
	contract, err := bindAssetManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AssetManagerFilterer{contract: contract}, nil
}

// bindAssetManager binds a generic wrapper to an already deployed contract.
func bindAssetManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := AssetManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AssetManager *AssetManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AssetManager.Contract.AssetManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AssetManager *AssetManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AssetManager.Contract.AssetManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AssetManager *AssetManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AssetManager.Contract.AssetManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AssetManager *AssetManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _AssetManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AssetManager *AssetManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AssetManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AssetManager *AssetManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AssetManager.Contract.contract.Transact(opts, method, params...)
}

// ASSETTOKEN is a free data retrieval call binding the contract method 0xd7062005.
//
// Solidity: function ASSET_TOKEN() view returns(address)
func (_AssetManager *AssetManagerCaller) ASSETTOKEN(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "ASSET_TOKEN")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ASSETTOKEN is a free data retrieval call binding the contract method 0xd7062005.
//
// Solidity: function ASSET_TOKEN() view returns(address)
func (_AssetManager *AssetManagerSession) ASSETTOKEN() (common.Address, error) {
	return _AssetManager.Contract.ASSETTOKEN(&_AssetManager.CallOpts)
}

// ASSETTOKEN is a free data retrieval call binding the contract method 0xd7062005.
//
// Solidity: function ASSET_TOKEN() view returns(address)
func (_AssetManager *AssetManagerCallerSession) ASSETTOKEN() (common.Address, error) {
	return _AssetManager.Contract.ASSETTOKEN(&_AssetManager.CallOpts)
}

// DECIMALOFFSET is a free data retrieval call binding the contract method 0xde7d4d6a.
//
// Solidity: function DECIMAL_OFFSET() view returns(uint128)
func (_AssetManager *AssetManagerCaller) DECIMALOFFSET(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "DECIMAL_OFFSET")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DECIMALOFFSET is a free data retrieval call binding the contract method 0xde7d4d6a.
//
// Solidity: function DECIMAL_OFFSET() view returns(uint128)
func (_AssetManager *AssetManagerSession) DECIMALOFFSET() (*big.Int, error) {
	return _AssetManager.Contract.DECIMALOFFSET(&_AssetManager.CallOpts)
}

// DECIMALOFFSET is a free data retrieval call binding the contract method 0xde7d4d6a.
//
// Solidity: function DECIMAL_OFFSET() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) DECIMALOFFSET() (*big.Int, error) {
	return _AssetManager.Contract.DECIMALOFFSET(&_AssetManager.CallOpts)
}

// KGH is a free data retrieval call binding the contract method 0x56576b5b.
//
// Solidity: function KGH() view returns(address)
func (_AssetManager *AssetManagerCaller) KGH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "KGH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// KGH is a free data retrieval call binding the contract method 0x56576b5b.
//
// Solidity: function KGH() view returns(address)
func (_AssetManager *AssetManagerSession) KGH() (common.Address, error) {
	return _AssetManager.Contract.KGH(&_AssetManager.CallOpts)
}

// KGH is a free data retrieval call binding the contract method 0x56576b5b.
//
// Solidity: function KGH() view returns(address)
func (_AssetManager *AssetManagerCallerSession) KGH() (common.Address, error) {
	return _AssetManager.Contract.KGH(&_AssetManager.CallOpts)
}

// KGHMANAGER is a free data retrieval call binding the contract method 0xd1e288c1.
//
// Solidity: function KGH_MANAGER() view returns(address)
func (_AssetManager *AssetManagerCaller) KGHMANAGER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "KGH_MANAGER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// KGHMANAGER is a free data retrieval call binding the contract method 0xd1e288c1.
//
// Solidity: function KGH_MANAGER() view returns(address)
func (_AssetManager *AssetManagerSession) KGHMANAGER() (common.Address, error) {
	return _AssetManager.Contract.KGHMANAGER(&_AssetManager.CallOpts)
}

// KGHMANAGER is a free data retrieval call binding the contract method 0xd1e288c1.
//
// Solidity: function KGH_MANAGER() view returns(address)
func (_AssetManager *AssetManagerCallerSession) KGHMANAGER() (common.Address, error) {
	return _AssetManager.Contract.KGHMANAGER(&_AssetManager.CallOpts)
}

// MINSLASHINGAMOUNT is a free data retrieval call binding the contract method 0x176a86d0.
//
// Solidity: function MIN_SLASHING_AMOUNT() view returns(uint128)
func (_AssetManager *AssetManagerCaller) MINSLASHINGAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "MIN_SLASHING_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MINSLASHINGAMOUNT is a free data retrieval call binding the contract method 0x176a86d0.
//
// Solidity: function MIN_SLASHING_AMOUNT() view returns(uint128)
func (_AssetManager *AssetManagerSession) MINSLASHINGAMOUNT() (*big.Int, error) {
	return _AssetManager.Contract.MINSLASHINGAMOUNT(&_AssetManager.CallOpts)
}

// MINSLASHINGAMOUNT is a free data retrieval call binding the contract method 0x176a86d0.
//
// Solidity: function MIN_SLASHING_AMOUNT() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) MINSLASHINGAMOUNT() (*big.Int, error) {
	return _AssetManager.Contract.MINSLASHINGAMOUNT(&_AssetManager.CallOpts)
}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_AssetManager *AssetManagerCaller) SECURITYCOUNCIL(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "SECURITY_COUNCIL")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_AssetManager *AssetManagerSession) SECURITYCOUNCIL() (common.Address, error) {
	return _AssetManager.Contract.SECURITYCOUNCIL(&_AssetManager.CallOpts)
}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_AssetManager *AssetManagerCallerSession) SECURITYCOUNCIL() (common.Address, error) {
	return _AssetManager.Contract.SECURITYCOUNCIL(&_AssetManager.CallOpts)
}

// SLASHINGRATE is a free data retrieval call binding the contract method 0x49da7fe9.
//
// Solidity: function SLASHING_RATE() view returns(uint128)
func (_AssetManager *AssetManagerCaller) SLASHINGRATE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "SLASHING_RATE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SLASHINGRATE is a free data retrieval call binding the contract method 0x49da7fe9.
//
// Solidity: function SLASHING_RATE() view returns(uint128)
func (_AssetManager *AssetManagerSession) SLASHINGRATE() (*big.Int, error) {
	return _AssetManager.Contract.SLASHINGRATE(&_AssetManager.CallOpts)
}

// SLASHINGRATE is a free data retrieval call binding the contract method 0x49da7fe9.
//
// Solidity: function SLASHING_RATE() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) SLASHINGRATE() (*big.Int, error) {
	return _AssetManager.Contract.SLASHINGRATE(&_AssetManager.CallOpts)
}

// SLASHINGRATEDENOM is a free data retrieval call binding the contract method 0x1a5deb4a.
//
// Solidity: function SLASHING_RATE_DENOM() view returns(uint128)
func (_AssetManager *AssetManagerCaller) SLASHINGRATEDENOM(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "SLASHING_RATE_DENOM")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SLASHINGRATEDENOM is a free data retrieval call binding the contract method 0x1a5deb4a.
//
// Solidity: function SLASHING_RATE_DENOM() view returns(uint128)
func (_AssetManager *AssetManagerSession) SLASHINGRATEDENOM() (*big.Int, error) {
	return _AssetManager.Contract.SLASHINGRATEDENOM(&_AssetManager.CallOpts)
}

// SLASHINGRATEDENOM is a free data retrieval call binding the contract method 0x1a5deb4a.
//
// Solidity: function SLASHING_RATE_DENOM() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) SLASHINGRATEDENOM() (*big.Int, error) {
	return _AssetManager.Contract.SLASHINGRATEDENOM(&_AssetManager.CallOpts)
}

// TAXDENOMINATOR is a free data retrieval call binding the contract method 0xa51c9ace.
//
// Solidity: function TAX_DENOMINATOR() view returns(uint128)
func (_AssetManager *AssetManagerCaller) TAXDENOMINATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "TAX_DENOMINATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TAXDENOMINATOR is a free data retrieval call binding the contract method 0xa51c9ace.
//
// Solidity: function TAX_DENOMINATOR() view returns(uint128)
func (_AssetManager *AssetManagerSession) TAXDENOMINATOR() (*big.Int, error) {
	return _AssetManager.Contract.TAXDENOMINATOR(&_AssetManager.CallOpts)
}

// TAXDENOMINATOR is a free data retrieval call binding the contract method 0xa51c9ace.
//
// Solidity: function TAX_DENOMINATOR() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TAXDENOMINATOR() (*big.Int, error) {
	return _AssetManager.Contract.TAXDENOMINATOR(&_AssetManager.CallOpts)
}

// TAXNUMERATOR is a free data retrieval call binding the contract method 0x82dae3aa.
//
// Solidity: function TAX_NUMERATOR() view returns(uint128)
func (_AssetManager *AssetManagerCaller) TAXNUMERATOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "TAX_NUMERATOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TAXNUMERATOR is a free data retrieval call binding the contract method 0x82dae3aa.
//
// Solidity: function TAX_NUMERATOR() view returns(uint128)
func (_AssetManager *AssetManagerSession) TAXNUMERATOR() (*big.Int, error) {
	return _AssetManager.Contract.TAXNUMERATOR(&_AssetManager.CallOpts)
}

// TAXNUMERATOR is a free data retrieval call binding the contract method 0x82dae3aa.
//
// Solidity: function TAX_NUMERATOR() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TAXNUMERATOR() (*big.Int, error) {
	return _AssetManager.Contract.TAXNUMERATOR(&_AssetManager.CallOpts)
}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_AssetManager *AssetManagerCaller) UNDELEGATIONPERIOD(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "UNDELEGATION_PERIOD")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_AssetManager *AssetManagerSession) UNDELEGATIONPERIOD() (*big.Int, error) {
	return _AssetManager.Contract.UNDELEGATIONPERIOD(&_AssetManager.CallOpts)
}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_AssetManager *AssetManagerCallerSession) UNDELEGATIONPERIOD() (*big.Int, error) {
	return _AssetManager.Contract.UNDELEGATIONPERIOD(&_AssetManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_AssetManager *AssetManagerCaller) VALIDATORMANAGER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "VALIDATOR_MANAGER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_AssetManager *AssetManagerSession) VALIDATORMANAGER() (common.Address, error) {
	return _AssetManager.Contract.VALIDATORMANAGER(&_AssetManager.CallOpts)
}

// VALIDATORMANAGER is a free data retrieval call binding the contract method 0xae9483e0.
//
// Solidity: function VALIDATOR_MANAGER() view returns(address)
func (_AssetManager *AssetManagerCallerSession) VALIDATORMANAGER() (common.Address, error) {
	return _AssetManager.Contract.VALIDATORMANAGER(&_AssetManager.CallOpts)
}

// VKROPERKGH is a free data retrieval call binding the contract method 0x631bda01.
//
// Solidity: function VKRO_PER_KGH() view returns(uint128)
func (_AssetManager *AssetManagerCaller) VKROPERKGH(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "VKRO_PER_KGH")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VKROPERKGH is a free data retrieval call binding the contract method 0x631bda01.
//
// Solidity: function VKRO_PER_KGH() view returns(uint128)
func (_AssetManager *AssetManagerSession) VKROPERKGH() (*big.Int, error) {
	return _AssetManager.Contract.VKROPERKGH(&_AssetManager.CallOpts)
}

// VKROPERKGH is a free data retrieval call binding the contract method 0x631bda01.
//
// Solidity: function VKRO_PER_KGH() view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) VKROPERKGH() (*big.Int, error) {
	return _AssetManager.Contract.VKROPERKGH(&_AssetManager.CallOpts)
}

// GetKghTotalBalance is a free data retrieval call binding the contract method 0xde313284.
//
// Solidity: function getKghTotalBalance(address validator, address delegator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerCaller) GetKghTotalBalance(opts *bind.CallOpts, validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "getKghTotalBalance", validator, delegator, tokenId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetKghTotalBalance is a free data retrieval call binding the contract method 0xde313284.
//
// Solidity: function getKghTotalBalance(address validator, address delegator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerSession) GetKghTotalBalance(validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.GetKghTotalBalance(&_AssetManager.CallOpts, validator, delegator, tokenId)
}

// GetKghTotalBalance is a free data retrieval call binding the contract method 0xde313284.
//
// Solidity: function getKghTotalBalance(address validator, address delegator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) GetKghTotalBalance(validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.GetKghTotalBalance(&_AssetManager.CallOpts, validator, delegator, tokenId)
}

// GetKghTotalShareBalance is a free data retrieval call binding the contract method 0xcf368e8c.
//
// Solidity: function getKghTotalShareBalance(address validator, address delegator, uint256 tokenId) view returns(uint128, uint128)
func (_AssetManager *AssetManagerCaller) GetKghTotalShareBalance(opts *bind.CallOpts, validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, *big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "getKghTotalShareBalance", validator, delegator, tokenId)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetKghTotalShareBalance is a free data retrieval call binding the contract method 0xcf368e8c.
//
// Solidity: function getKghTotalShareBalance(address validator, address delegator, uint256 tokenId) view returns(uint128, uint128)
func (_AssetManager *AssetManagerSession) GetKghTotalShareBalance(validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, *big.Int, error) {
	return _AssetManager.Contract.GetKghTotalShareBalance(&_AssetManager.CallOpts, validator, delegator, tokenId)
}

// GetKghTotalShareBalance is a free data retrieval call binding the contract method 0xcf368e8c.
//
// Solidity: function getKghTotalShareBalance(address validator, address delegator, uint256 tokenId) view returns(uint128, uint128)
func (_AssetManager *AssetManagerCallerSession) GetKghTotalShareBalance(validator common.Address, delegator common.Address, tokenId *big.Int) (*big.Int, *big.Int, error) {
	return _AssetManager.Contract.GetKghTotalShareBalance(&_AssetManager.CallOpts, validator, delegator, tokenId)
}

// GetKroTotalBalance is a free data retrieval call binding the contract method 0x8c090350.
//
// Solidity: function getKroTotalBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) GetKroTotalBalance(opts *bind.CallOpts, validator common.Address, delegator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "getKroTotalBalance", validator, delegator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetKroTotalBalance is a free data retrieval call binding the contract method 0x8c090350.
//
// Solidity: function getKroTotalBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerSession) GetKroTotalBalance(validator common.Address, delegator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.GetKroTotalBalance(&_AssetManager.CallOpts, validator, delegator)
}

// GetKroTotalBalance is a free data retrieval call binding the contract method 0x8c090350.
//
// Solidity: function getKroTotalBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) GetKroTotalBalance(validator common.Address, delegator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.GetKroTotalBalance(&_AssetManager.CallOpts, validator, delegator)
}

// GetKroTotalShareBalance is a free data retrieval call binding the contract method 0x842d0d3b.
//
// Solidity: function getKroTotalShareBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) GetKroTotalShareBalance(opts *bind.CallOpts, validator common.Address, delegator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "getKroTotalShareBalance", validator, delegator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetKroTotalShareBalance is a free data retrieval call binding the contract method 0x842d0d3b.
//
// Solidity: function getKroTotalShareBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerSession) GetKroTotalShareBalance(validator common.Address, delegator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.GetKroTotalShareBalance(&_AssetManager.CallOpts, validator, delegator)
}

// GetKroTotalShareBalance is a free data retrieval call binding the contract method 0x842d0d3b.
//
// Solidity: function getKroTotalShareBalance(address validator, address delegator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) GetKroTotalShareBalance(validator common.Address, delegator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.GetKroTotalShareBalance(&_AssetManager.CallOpts, validator, delegator)
}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_AssetManager *AssetManagerCaller) OnERC721Received(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "onERC721Received", arg0, arg1, arg2, arg3)

	if err != nil {
		return *new([4]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([4]byte)).(*[4]byte)

	return out0, err

}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_AssetManager *AssetManagerSession) OnERC721Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	return _AssetManager.Contract.OnERC721Received(&_AssetManager.CallOpts, arg0, arg1, arg2, arg3)
}

// OnERC721Received is a free data retrieval call binding the contract method 0x150b7a02.
//
// Solidity: function onERC721Received(address , address , uint256 , bytes ) pure returns(bytes4)
func (_AssetManager *AssetManagerCallerSession) OnERC721Received(arg0 common.Address, arg1 common.Address, arg2 *big.Int, arg3 []byte) ([4]byte, error) {
	return _AssetManager.Contract.OnERC721Received(&_AssetManager.CallOpts, arg0, arg1, arg2, arg3)
}

// PreviewDelegate is a free data retrieval call binding the contract method 0x960a0893.
//
// Solidity: function previewDelegate(address validator, uint128 assets) view returns(uint128)
func (_AssetManager *AssetManagerCaller) PreviewDelegate(opts *bind.CallOpts, validator common.Address, assets *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "previewDelegate", validator, assets)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PreviewDelegate is a free data retrieval call binding the contract method 0x960a0893.
//
// Solidity: function previewDelegate(address validator, uint128 assets) view returns(uint128)
func (_AssetManager *AssetManagerSession) PreviewDelegate(validator common.Address, assets *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewDelegate(&_AssetManager.CallOpts, validator, assets)
}

// PreviewDelegate is a free data retrieval call binding the contract method 0x960a0893.
//
// Solidity: function previewDelegate(address validator, uint128 assets) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) PreviewDelegate(validator common.Address, assets *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewDelegate(&_AssetManager.CallOpts, validator, assets)
}

// PreviewKghDelegate is a free data retrieval call binding the contract method 0xa93b7ad4.
//
// Solidity: function previewKghDelegate(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) PreviewKghDelegate(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "previewKghDelegate", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PreviewKghDelegate is a free data retrieval call binding the contract method 0xa93b7ad4.
//
// Solidity: function previewKghDelegate(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) PreviewKghDelegate(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.PreviewKghDelegate(&_AssetManager.CallOpts, validator)
}

// PreviewKghDelegate is a free data retrieval call binding the contract method 0xa93b7ad4.
//
// Solidity: function previewKghDelegate(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) PreviewKghDelegate(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.PreviewKghDelegate(&_AssetManager.CallOpts, validator)
}

// PreviewKghUndelegate is a free data retrieval call binding the contract method 0x8cdfe8a9.
//
// Solidity: function previewKghUndelegate(address validator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerCaller) PreviewKghUndelegate(opts *bind.CallOpts, validator common.Address, tokenId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "previewKghUndelegate", validator, tokenId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PreviewKghUndelegate is a free data retrieval call binding the contract method 0x8cdfe8a9.
//
// Solidity: function previewKghUndelegate(address validator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerSession) PreviewKghUndelegate(validator common.Address, tokenId *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewKghUndelegate(&_AssetManager.CallOpts, validator, tokenId)
}

// PreviewKghUndelegate is a free data retrieval call binding the contract method 0x8cdfe8a9.
//
// Solidity: function previewKghUndelegate(address validator, uint256 tokenId) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) PreviewKghUndelegate(validator common.Address, tokenId *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewKghUndelegate(&_AssetManager.CallOpts, validator, tokenId)
}

// PreviewUndelegate is a free data retrieval call binding the contract method 0x209a9694.
//
// Solidity: function previewUndelegate(address validator, uint128 shares) view returns(uint128)
func (_AssetManager *AssetManagerCaller) PreviewUndelegate(opts *bind.CallOpts, validator common.Address, shares *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "previewUndelegate", validator, shares)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PreviewUndelegate is a free data retrieval call binding the contract method 0x209a9694.
//
// Solidity: function previewUndelegate(address validator, uint128 shares) view returns(uint128)
func (_AssetManager *AssetManagerSession) PreviewUndelegate(validator common.Address, shares *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewUndelegate(&_AssetManager.CallOpts, validator, shares)
}

// PreviewUndelegate is a free data retrieval call binding the contract method 0x209a9694.
//
// Solidity: function previewUndelegate(address validator, uint128 shares) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) PreviewUndelegate(validator common.Address, shares *big.Int) (*big.Int, error) {
	return _AssetManager.Contract.PreviewUndelegate(&_AssetManager.CallOpts, validator, shares)
}

// ReflectiveWeight is a free data retrieval call binding the contract method 0x8abf0af0.
//
// Solidity: function reflectiveWeight(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) ReflectiveWeight(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "reflectiveWeight", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ReflectiveWeight is a free data retrieval call binding the contract method 0x8abf0af0.
//
// Solidity: function reflectiveWeight(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) ReflectiveWeight(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.ReflectiveWeight(&_AssetManager.CallOpts, validator)
}

// ReflectiveWeight is a free data retrieval call binding the contract method 0x8abf0af0.
//
// Solidity: function reflectiveWeight(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) ReflectiveWeight(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.ReflectiveWeight(&_AssetManager.CallOpts, validator)
}

// TotalKghNum is a free data retrieval call binding the contract method 0x913f1a9f.
//
// Solidity: function totalKghNum(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) TotalKghNum(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "totalKghNum", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalKghNum is a free data retrieval call binding the contract method 0x913f1a9f.
//
// Solidity: function totalKghNum(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) TotalKghNum(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKghNum(&_AssetManager.CallOpts, validator)
}

// TotalKghNum is a free data retrieval call binding the contract method 0x913f1a9f.
//
// Solidity: function totalKghNum(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TotalKghNum(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKghNum(&_AssetManager.CallOpts, validator)
}

// TotalKroAssets is a free data retrieval call binding the contract method 0x6b9ffeac.
//
// Solidity: function totalKroAssets(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) TotalKroAssets(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "totalKroAssets", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalKroAssets is a free data retrieval call binding the contract method 0x6b9ffeac.
//
// Solidity: function totalKroAssets(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) TotalKroAssets(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKroAssets(&_AssetManager.CallOpts, validator)
}

// TotalKroAssets is a free data retrieval call binding the contract method 0x6b9ffeac.
//
// Solidity: function totalKroAssets(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TotalKroAssets(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKroAssets(&_AssetManager.CallOpts, validator)
}

// TotalKroInKgh is a free data retrieval call binding the contract method 0x12188543.
//
// Solidity: function totalKroInKgh(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) TotalKroInKgh(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "totalKroInKgh", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalKroInKgh is a free data retrieval call binding the contract method 0x12188543.
//
// Solidity: function totalKroInKgh(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) TotalKroInKgh(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKroInKgh(&_AssetManager.CallOpts, validator)
}

// TotalKroInKgh is a free data retrieval call binding the contract method 0x12188543.
//
// Solidity: function totalKroInKgh(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TotalKroInKgh(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalKroInKgh(&_AssetManager.CallOpts, validator)
}

// TotalValidatorKro is a free data retrieval call binding the contract method 0x981cee53.
//
// Solidity: function totalValidatorKro(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCaller) TotalValidatorKro(opts *bind.CallOpts, validator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "totalValidatorKro", validator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalValidatorKro is a free data retrieval call binding the contract method 0x981cee53.
//
// Solidity: function totalValidatorKro(address validator) view returns(uint128)
func (_AssetManager *AssetManagerSession) TotalValidatorKro(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalValidatorKro(&_AssetManager.CallOpts, validator)
}

// TotalValidatorKro is a free data retrieval call binding the contract method 0x981cee53.
//
// Solidity: function totalValidatorKro(address validator) view returns(uint128)
func (_AssetManager *AssetManagerCallerSession) TotalValidatorKro(validator common.Address) (*big.Int, error) {
	return _AssetManager.Contract.TotalValidatorKro(&_AssetManager.CallOpts, validator)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_AssetManager *AssetManagerCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _AssetManager.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_AssetManager *AssetManagerSession) Version() (string, error) {
	return _AssetManager.Contract.Version(&_AssetManager.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_AssetManager *AssetManagerCallerSession) Version() (string, error) {
	return _AssetManager.Contract.Version(&_AssetManager.CallOpts)
}

// Delegate is a paid mutator transaction binding the contract method 0xa85120e4.
//
// Solidity: function delegate(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerTransactor) Delegate(opts *bind.TransactOpts, validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "delegate", validator, assets)
}

// Delegate is a paid mutator transaction binding the contract method 0xa85120e4.
//
// Solidity: function delegate(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerSession) Delegate(validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.Delegate(&_AssetManager.TransactOpts, validator, assets)
}

// Delegate is a paid mutator transaction binding the contract method 0xa85120e4.
//
// Solidity: function delegate(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerTransactorSession) Delegate(validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.Delegate(&_AssetManager.TransactOpts, validator, assets)
}

// DelegateKgh is a paid mutator transaction binding the contract method 0x1f86f4f1.
//
// Solidity: function delegateKgh(address validator, uint256 tokenId) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactor) DelegateKgh(opts *bind.TransactOpts, validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "delegateKgh", validator, tokenId)
}

// DelegateKgh is a paid mutator transaction binding the contract method 0x1f86f4f1.
//
// Solidity: function delegateKgh(address validator, uint256 tokenId) returns(uint128, uint128)
func (_AssetManager *AssetManagerSession) DelegateKgh(validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateKgh(&_AssetManager.TransactOpts, validator, tokenId)
}

// DelegateKgh is a paid mutator transaction binding the contract method 0x1f86f4f1.
//
// Solidity: function delegateKgh(address validator, uint256 tokenId) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactorSession) DelegateKgh(validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateKgh(&_AssetManager.TransactOpts, validator, tokenId)
}

// DelegateKghBatch is a paid mutator transaction binding the contract method 0x31d8e007.
//
// Solidity: function delegateKghBatch(address validator, uint256[] tokenIds) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactor) DelegateKghBatch(opts *bind.TransactOpts, validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "delegateKghBatch", validator, tokenIds)
}

// DelegateKghBatch is a paid mutator transaction binding the contract method 0x31d8e007.
//
// Solidity: function delegateKghBatch(address validator, uint256[] tokenIds) returns(uint128, uint128)
func (_AssetManager *AssetManagerSession) DelegateKghBatch(validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateKghBatch(&_AssetManager.TransactOpts, validator, tokenIds)
}

// DelegateKghBatch is a paid mutator transaction binding the contract method 0x31d8e007.
//
// Solidity: function delegateKghBatch(address validator, uint256[] tokenIds) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactorSession) DelegateKghBatch(validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateKghBatch(&_AssetManager.TransactOpts, validator, tokenIds)
}

// DelegateToRegister is a paid mutator transaction binding the contract method 0xd7f1a3d8.
//
// Solidity: function delegateToRegister(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerTransactor) DelegateToRegister(opts *bind.TransactOpts, validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "delegateToRegister", validator, assets)
}

// DelegateToRegister is a paid mutator transaction binding the contract method 0xd7f1a3d8.
//
// Solidity: function delegateToRegister(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerSession) DelegateToRegister(validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateToRegister(&_AssetManager.TransactOpts, validator, assets)
}

// DelegateToRegister is a paid mutator transaction binding the contract method 0xd7f1a3d8.
//
// Solidity: function delegateToRegister(address validator, uint128 assets) returns(uint128)
func (_AssetManager *AssetManagerTransactorSession) DelegateToRegister(validator common.Address, assets *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.DelegateToRegister(&_AssetManager.TransactOpts, validator, assets)
}

// FinalizeClaimValidatorReward is a paid mutator transaction binding the contract method 0x0bc0b881.
//
// Solidity: function finalizeClaimValidatorReward() returns()
func (_AssetManager *AssetManagerTransactor) FinalizeClaimValidatorReward(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "finalizeClaimValidatorReward")
}

// FinalizeClaimValidatorReward is a paid mutator transaction binding the contract method 0x0bc0b881.
//
// Solidity: function finalizeClaimValidatorReward() returns()
func (_AssetManager *AssetManagerSession) FinalizeClaimValidatorReward() (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeClaimValidatorReward(&_AssetManager.TransactOpts)
}

// FinalizeClaimValidatorReward is a paid mutator transaction binding the contract method 0x0bc0b881.
//
// Solidity: function finalizeClaimValidatorReward() returns()
func (_AssetManager *AssetManagerTransactorSession) FinalizeClaimValidatorReward() (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeClaimValidatorReward(&_AssetManager.TransactOpts)
}

// FinalizeUndelegate is a paid mutator transaction binding the contract method 0xb9f6131b.
//
// Solidity: function finalizeUndelegate(address validator) returns(uint128)
func (_AssetManager *AssetManagerTransactor) FinalizeUndelegate(opts *bind.TransactOpts, validator common.Address) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "finalizeUndelegate", validator)
}

// FinalizeUndelegate is a paid mutator transaction binding the contract method 0xb9f6131b.
//
// Solidity: function finalizeUndelegate(address validator) returns(uint128)
func (_AssetManager *AssetManagerSession) FinalizeUndelegate(validator common.Address) (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeUndelegate(&_AssetManager.TransactOpts, validator)
}

// FinalizeUndelegate is a paid mutator transaction binding the contract method 0xb9f6131b.
//
// Solidity: function finalizeUndelegate(address validator) returns(uint128)
func (_AssetManager *AssetManagerTransactorSession) FinalizeUndelegate(validator common.Address) (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeUndelegate(&_AssetManager.TransactOpts, validator)
}

// FinalizeUndelegateKgh is a paid mutator transaction binding the contract method 0xb7aa324a.
//
// Solidity: function finalizeUndelegateKgh(address validator) returns(uint128)
func (_AssetManager *AssetManagerTransactor) FinalizeUndelegateKgh(opts *bind.TransactOpts, validator common.Address) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "finalizeUndelegateKgh", validator)
}

// FinalizeUndelegateKgh is a paid mutator transaction binding the contract method 0xb7aa324a.
//
// Solidity: function finalizeUndelegateKgh(address validator) returns(uint128)
func (_AssetManager *AssetManagerSession) FinalizeUndelegateKgh(validator common.Address) (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeUndelegateKgh(&_AssetManager.TransactOpts, validator)
}

// FinalizeUndelegateKgh is a paid mutator transaction binding the contract method 0xb7aa324a.
//
// Solidity: function finalizeUndelegateKgh(address validator) returns(uint128)
func (_AssetManager *AssetManagerTransactorSession) FinalizeUndelegateKgh(validator common.Address) (*types.Transaction, error) {
	return _AssetManager.Contract.FinalizeUndelegateKgh(&_AssetManager.TransactOpts, validator)
}

// IncreaseBalanceWithReward is a paid mutator transaction binding the contract method 0xad429451.
//
// Solidity: function increaseBalanceWithReward(address validator, uint128 baseReward, uint128 boostedReward, uint128 validatorReward) returns()
func (_AssetManager *AssetManagerTransactor) IncreaseBalanceWithReward(opts *bind.TransactOpts, validator common.Address, baseReward *big.Int, boostedReward *big.Int, validatorReward *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "increaseBalanceWithReward", validator, baseReward, boostedReward, validatorReward)
}

// IncreaseBalanceWithReward is a paid mutator transaction binding the contract method 0xad429451.
//
// Solidity: function increaseBalanceWithReward(address validator, uint128 baseReward, uint128 boostedReward, uint128 validatorReward) returns()
func (_AssetManager *AssetManagerSession) IncreaseBalanceWithReward(validator common.Address, baseReward *big.Int, boostedReward *big.Int, validatorReward *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.IncreaseBalanceWithReward(&_AssetManager.TransactOpts, validator, baseReward, boostedReward, validatorReward)
}

// IncreaseBalanceWithReward is a paid mutator transaction binding the contract method 0xad429451.
//
// Solidity: function increaseBalanceWithReward(address validator, uint128 baseReward, uint128 boostedReward, uint128 validatorReward) returns()
func (_AssetManager *AssetManagerTransactorSession) IncreaseBalanceWithReward(validator common.Address, baseReward *big.Int, boostedReward *big.Int, validatorReward *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.IncreaseBalanceWithReward(&_AssetManager.TransactOpts, validator, baseReward, boostedReward, validatorReward)
}

// InitClaimValidatorReward is a paid mutator transaction binding the contract method 0x2328bf42.
//
// Solidity: function initClaimValidatorReward(uint128 amount) returns()
func (_AssetManager *AssetManagerTransactor) InitClaimValidatorReward(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "initClaimValidatorReward", amount)
}

// InitClaimValidatorReward is a paid mutator transaction binding the contract method 0x2328bf42.
//
// Solidity: function initClaimValidatorReward(uint128 amount) returns()
func (_AssetManager *AssetManagerSession) InitClaimValidatorReward(amount *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitClaimValidatorReward(&_AssetManager.TransactOpts, amount)
}

// InitClaimValidatorReward is a paid mutator transaction binding the contract method 0x2328bf42.
//
// Solidity: function initClaimValidatorReward(uint128 amount) returns()
func (_AssetManager *AssetManagerTransactorSession) InitClaimValidatorReward(amount *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitClaimValidatorReward(&_AssetManager.TransactOpts, amount)
}

// InitUndelegate is a paid mutator transaction binding the contract method 0x5dd0293b.
//
// Solidity: function initUndelegate(address validator, uint128 shares) returns()
func (_AssetManager *AssetManagerTransactor) InitUndelegate(opts *bind.TransactOpts, validator common.Address, shares *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "initUndelegate", validator, shares)
}

// InitUndelegate is a paid mutator transaction binding the contract method 0x5dd0293b.
//
// Solidity: function initUndelegate(address validator, uint128 shares) returns()
func (_AssetManager *AssetManagerSession) InitUndelegate(validator common.Address, shares *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegate(&_AssetManager.TransactOpts, validator, shares)
}

// InitUndelegate is a paid mutator transaction binding the contract method 0x5dd0293b.
//
// Solidity: function initUndelegate(address validator, uint128 shares) returns()
func (_AssetManager *AssetManagerTransactorSession) InitUndelegate(validator common.Address, shares *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegate(&_AssetManager.TransactOpts, validator, shares)
}

// InitUndelegateKgh is a paid mutator transaction binding the contract method 0x7cd68cd7.
//
// Solidity: function initUndelegateKgh(address validator, uint256 tokenId) returns()
func (_AssetManager *AssetManagerTransactor) InitUndelegateKgh(opts *bind.TransactOpts, validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "initUndelegateKgh", validator, tokenId)
}

// InitUndelegateKgh is a paid mutator transaction binding the contract method 0x7cd68cd7.
//
// Solidity: function initUndelegateKgh(address validator, uint256 tokenId) returns()
func (_AssetManager *AssetManagerSession) InitUndelegateKgh(validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegateKgh(&_AssetManager.TransactOpts, validator, tokenId)
}

// InitUndelegateKgh is a paid mutator transaction binding the contract method 0x7cd68cd7.
//
// Solidity: function initUndelegateKgh(address validator, uint256 tokenId) returns()
func (_AssetManager *AssetManagerTransactorSession) InitUndelegateKgh(validator common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegateKgh(&_AssetManager.TransactOpts, validator, tokenId)
}

// InitUndelegateKghBatch is a paid mutator transaction binding the contract method 0xa30c5f30.
//
// Solidity: function initUndelegateKghBatch(address validator, uint256[] tokenIds) returns()
func (_AssetManager *AssetManagerTransactor) InitUndelegateKghBatch(opts *bind.TransactOpts, validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "initUndelegateKghBatch", validator, tokenIds)
}

// InitUndelegateKghBatch is a paid mutator transaction binding the contract method 0xa30c5f30.
//
// Solidity: function initUndelegateKghBatch(address validator, uint256[] tokenIds) returns()
func (_AssetManager *AssetManagerSession) InitUndelegateKghBatch(validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegateKghBatch(&_AssetManager.TransactOpts, validator, tokenIds)
}

// InitUndelegateKghBatch is a paid mutator transaction binding the contract method 0xa30c5f30.
//
// Solidity: function initUndelegateKghBatch(address validator, uint256[] tokenIds) returns()
func (_AssetManager *AssetManagerTransactorSession) InitUndelegateKghBatch(validator common.Address, tokenIds []*big.Int) (*types.Transaction, error) {
	return _AssetManager.Contract.InitUndelegateKghBatch(&_AssetManager.TransactOpts, validator, tokenIds)
}

// ModifyBalanceWithChallenge is a paid mutator transaction binding the contract method 0x3ecf0ced.
//
// Solidity: function modifyBalanceWithChallenge(address validator, uint128 challengeReward, bool isLoser) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactor) ModifyBalanceWithChallenge(opts *bind.TransactOpts, validator common.Address, challengeReward *big.Int, isLoser bool) (*types.Transaction, error) {
	return _AssetManager.contract.Transact(opts, "modifyBalanceWithChallenge", validator, challengeReward, isLoser)
}

// ModifyBalanceWithChallenge is a paid mutator transaction binding the contract method 0x3ecf0ced.
//
// Solidity: function modifyBalanceWithChallenge(address validator, uint128 challengeReward, bool isLoser) returns(uint128, uint128)
func (_AssetManager *AssetManagerSession) ModifyBalanceWithChallenge(validator common.Address, challengeReward *big.Int, isLoser bool) (*types.Transaction, error) {
	return _AssetManager.Contract.ModifyBalanceWithChallenge(&_AssetManager.TransactOpts, validator, challengeReward, isLoser)
}

// ModifyBalanceWithChallenge is a paid mutator transaction binding the contract method 0x3ecf0ced.
//
// Solidity: function modifyBalanceWithChallenge(address validator, uint128 challengeReward, bool isLoser) returns(uint128, uint128)
func (_AssetManager *AssetManagerTransactorSession) ModifyBalanceWithChallenge(validator common.Address, challengeReward *big.Int, isLoser bool) (*types.Transaction, error) {
	return _AssetManager.Contract.ModifyBalanceWithChallenge(&_AssetManager.TransactOpts, validator, challengeReward, isLoser)
}

// AssetManagerKghBatchDelegatedIterator is returned from FilterKghBatchDelegated and is used to iterate over the raw logs and unpacked data for KghBatchDelegated events raised by the AssetManager contract.
type AssetManagerKghBatchDelegatedIterator struct {
	Event *AssetManagerKghBatchDelegated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKghBatchDelegatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKghBatchDelegated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKghBatchDelegated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKghBatchDelegatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKghBatchDelegatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKghBatchDelegated represents a KghBatchDelegated event raised by the AssetManager contract.
type AssetManagerKghBatchDelegated struct {
	Validator common.Address
	Delegator common.Address
	TokenIds  []*big.Int
	KroShares *big.Int
	KghShares *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKghBatchDelegated is a free log retrieval operation binding the contract event 0x32d1388f6c67f8101e5b61b8d17b70b87d15213fb6e6ebef744aaedfa4a41d1f.
//
// Solidity: event KghBatchDelegated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) FilterKghBatchDelegated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKghBatchDelegatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KghBatchDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKghBatchDelegatedIterator{contract: _AssetManager.contract, event: "KghBatchDelegated", logs: logs, sub: sub}, nil
}

// WatchKghBatchDelegated is a free log subscription operation binding the contract event 0x32d1388f6c67f8101e5b61b8d17b70b87d15213fb6e6ebef744aaedfa4a41d1f.
//
// Solidity: event KghBatchDelegated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) WatchKghBatchDelegated(opts *bind.WatchOpts, sink chan<- *AssetManagerKghBatchDelegated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KghBatchDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKghBatchDelegated)
				if err := _AssetManager.contract.UnpackLog(event, "KghBatchDelegated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKghBatchDelegated is a log parse operation binding the contract event 0x32d1388f6c67f8101e5b61b8d17b70b87d15213fb6e6ebef744aaedfa4a41d1f.
//
// Solidity: event KghBatchDelegated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) ParseKghBatchDelegated(log types.Log) (*AssetManagerKghBatchDelegated, error) {
	event := new(AssetManagerKghBatchDelegated)
	if err := _AssetManager.contract.UnpackLog(event, "KghBatchDelegated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKghBatchUndelegationInitiatedIterator is returned from FilterKghBatchUndelegationInitiated and is used to iterate over the raw logs and unpacked data for KghBatchUndelegationInitiated events raised by the AssetManager contract.
type AssetManagerKghBatchUndelegationInitiatedIterator struct {
	Event *AssetManagerKghBatchUndelegationInitiated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKghBatchUndelegationInitiatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKghBatchUndelegationInitiated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKghBatchUndelegationInitiated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKghBatchUndelegationInitiatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKghBatchUndelegationInitiatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKghBatchUndelegationInitiated represents a KghBatchUndelegationInitiated event raised by the AssetManager contract.
type AssetManagerKghBatchUndelegationInitiated struct {
	Validator common.Address
	Delegator common.Address
	TokenIds  []*big.Int
	KroShares *big.Int
	KghShares *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKghBatchUndelegationInitiated is a free log retrieval operation binding the contract event 0xcb83bfd06f7180fe00601135ea03ce74be1a309cbdfd2e5a467bc7c42328f6c3.
//
// Solidity: event KghBatchUndelegationInitiated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) FilterKghBatchUndelegationInitiated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKghBatchUndelegationInitiatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KghBatchUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKghBatchUndelegationInitiatedIterator{contract: _AssetManager.contract, event: "KghBatchUndelegationInitiated", logs: logs, sub: sub}, nil
}

// WatchKghBatchUndelegationInitiated is a free log subscription operation binding the contract event 0xcb83bfd06f7180fe00601135ea03ce74be1a309cbdfd2e5a467bc7c42328f6c3.
//
// Solidity: event KghBatchUndelegationInitiated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) WatchKghBatchUndelegationInitiated(opts *bind.WatchOpts, sink chan<- *AssetManagerKghBatchUndelegationInitiated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KghBatchUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKghBatchUndelegationInitiated)
				if err := _AssetManager.contract.UnpackLog(event, "KghBatchUndelegationInitiated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKghBatchUndelegationInitiated is a log parse operation binding the contract event 0xcb83bfd06f7180fe00601135ea03ce74be1a309cbdfd2e5a467bc7c42328f6c3.
//
// Solidity: event KghBatchUndelegationInitiated(address indexed validator, address indexed delegator, uint256[] tokenIds, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) ParseKghBatchUndelegationInitiated(log types.Log) (*AssetManagerKghBatchUndelegationInitiated, error) {
	event := new(AssetManagerKghBatchUndelegationInitiated)
	if err := _AssetManager.contract.UnpackLog(event, "KghBatchUndelegationInitiated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKghDelegatedIterator is returned from FilterKghDelegated and is used to iterate over the raw logs and unpacked data for KghDelegated events raised by the AssetManager contract.
type AssetManagerKghDelegatedIterator struct {
	Event *AssetManagerKghDelegated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKghDelegatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKghDelegated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKghDelegated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKghDelegatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKghDelegatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKghDelegated represents a KghDelegated event raised by the AssetManager contract.
type AssetManagerKghDelegated struct {
	Validator common.Address
	Delegator common.Address
	TokenId   *big.Int
	KroInKgh  *big.Int
	KroShares *big.Int
	KghShares *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKghDelegated is a free log retrieval operation binding the contract event 0x5b545a208eb5f51c3900b6fbf02a83cfdafcfbd2bae035a706827fceef97be8b.
//
// Solidity: event KghDelegated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroInKgh, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) FilterKghDelegated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKghDelegatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KghDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKghDelegatedIterator{contract: _AssetManager.contract, event: "KghDelegated", logs: logs, sub: sub}, nil
}

// WatchKghDelegated is a free log subscription operation binding the contract event 0x5b545a208eb5f51c3900b6fbf02a83cfdafcfbd2bae035a706827fceef97be8b.
//
// Solidity: event KghDelegated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroInKgh, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) WatchKghDelegated(opts *bind.WatchOpts, sink chan<- *AssetManagerKghDelegated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KghDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKghDelegated)
				if err := _AssetManager.contract.UnpackLog(event, "KghDelegated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKghDelegated is a log parse operation binding the contract event 0x5b545a208eb5f51c3900b6fbf02a83cfdafcfbd2bae035a706827fceef97be8b.
//
// Solidity: event KghDelegated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroInKgh, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) ParseKghDelegated(log types.Log) (*AssetManagerKghDelegated, error) {
	event := new(AssetManagerKghDelegated)
	if err := _AssetManager.contract.UnpackLog(event, "KghDelegated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKghUndelegationFinalizedIterator is returned from FilterKghUndelegationFinalized and is used to iterate over the raw logs and unpacked data for KghUndelegationFinalized events raised by the AssetManager contract.
type AssetManagerKghUndelegationFinalizedIterator struct {
	Event *AssetManagerKghUndelegationFinalized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKghUndelegationFinalizedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKghUndelegationFinalized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKghUndelegationFinalized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKghUndelegationFinalizedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKghUndelegationFinalizedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKghUndelegationFinalized represents a KghUndelegationFinalized event raised by the AssetManager contract.
type AssetManagerKghUndelegationFinalized struct {
	Validator common.Address
	Delegator common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKghUndelegationFinalized is a free log retrieval operation binding the contract event 0xb8e63154a3a976a585c24f01fc46ead9ec9a0038ca84a74e3090e938c61fabe4.
//
// Solidity: event KghUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) FilterKghUndelegationFinalized(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKghUndelegationFinalizedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KghUndelegationFinalized", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKghUndelegationFinalizedIterator{contract: _AssetManager.contract, event: "KghUndelegationFinalized", logs: logs, sub: sub}, nil
}

// WatchKghUndelegationFinalized is a free log subscription operation binding the contract event 0xb8e63154a3a976a585c24f01fc46ead9ec9a0038ca84a74e3090e938c61fabe4.
//
// Solidity: event KghUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) WatchKghUndelegationFinalized(opts *bind.WatchOpts, sink chan<- *AssetManagerKghUndelegationFinalized, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KghUndelegationFinalized", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKghUndelegationFinalized)
				if err := _AssetManager.contract.UnpackLog(event, "KghUndelegationFinalized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKghUndelegationFinalized is a log parse operation binding the contract event 0xb8e63154a3a976a585c24f01fc46ead9ec9a0038ca84a74e3090e938c61fabe4.
//
// Solidity: event KghUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) ParseKghUndelegationFinalized(log types.Log) (*AssetManagerKghUndelegationFinalized, error) {
	event := new(AssetManagerKghUndelegationFinalized)
	if err := _AssetManager.contract.UnpackLog(event, "KghUndelegationFinalized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKghUndelegationInitiatedIterator is returned from FilterKghUndelegationInitiated and is used to iterate over the raw logs and unpacked data for KghUndelegationInitiated events raised by the AssetManager contract.
type AssetManagerKghUndelegationInitiatedIterator struct {
	Event *AssetManagerKghUndelegationInitiated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKghUndelegationInitiatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKghUndelegationInitiated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKghUndelegationInitiated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKghUndelegationInitiatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKghUndelegationInitiatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKghUndelegationInitiated represents a KghUndelegationInitiated event raised by the AssetManager contract.
type AssetManagerKghUndelegationInitiated struct {
	Validator common.Address
	Delegator common.Address
	TokenId   *big.Int
	KroShares *big.Int
	KghShares *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKghUndelegationInitiated is a free log retrieval operation binding the contract event 0x4d45e37032bac00ed9fe936ed54d9751ff10d249aec97a5dcd23a769a6be31fc.
//
// Solidity: event KghUndelegationInitiated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) FilterKghUndelegationInitiated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKghUndelegationInitiatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KghUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKghUndelegationInitiatedIterator{contract: _AssetManager.contract, event: "KghUndelegationInitiated", logs: logs, sub: sub}, nil
}

// WatchKghUndelegationInitiated is a free log subscription operation binding the contract event 0x4d45e37032bac00ed9fe936ed54d9751ff10d249aec97a5dcd23a769a6be31fc.
//
// Solidity: event KghUndelegationInitiated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) WatchKghUndelegationInitiated(opts *bind.WatchOpts, sink chan<- *AssetManagerKghUndelegationInitiated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KghUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKghUndelegationInitiated)
				if err := _AssetManager.contract.UnpackLog(event, "KghUndelegationInitiated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKghUndelegationInitiated is a log parse operation binding the contract event 0x4d45e37032bac00ed9fe936ed54d9751ff10d249aec97a5dcd23a769a6be31fc.
//
// Solidity: event KghUndelegationInitiated(address indexed validator, address indexed delegator, uint256 tokenId, uint128 kroShares, uint128 kghShares)
func (_AssetManager *AssetManagerFilterer) ParseKghUndelegationInitiated(log types.Log) (*AssetManagerKghUndelegationInitiated, error) {
	event := new(AssetManagerKghUndelegationInitiated)
	if err := _AssetManager.contract.UnpackLog(event, "KghUndelegationInitiated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKroDelegatedIterator is returned from FilterKroDelegated and is used to iterate over the raw logs and unpacked data for KroDelegated events raised by the AssetManager contract.
type AssetManagerKroDelegatedIterator struct {
	Event *AssetManagerKroDelegated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKroDelegatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKroDelegated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKroDelegated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKroDelegatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKroDelegatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKroDelegated represents a KroDelegated event raised by the AssetManager contract.
type AssetManagerKroDelegated struct {
	Validator common.Address
	Delegator common.Address
	Amount    *big.Int
	Shares    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKroDelegated is a free log retrieval operation binding the contract event 0x334cabe84b7338f2bdd62070c02f24ffbcc7735e46f425fa401db349717e1328.
//
// Solidity: event KroDelegated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) FilterKroDelegated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKroDelegatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KroDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKroDelegatedIterator{contract: _AssetManager.contract, event: "KroDelegated", logs: logs, sub: sub}, nil
}

// WatchKroDelegated is a free log subscription operation binding the contract event 0x334cabe84b7338f2bdd62070c02f24ffbcc7735e46f425fa401db349717e1328.
//
// Solidity: event KroDelegated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) WatchKroDelegated(opts *bind.WatchOpts, sink chan<- *AssetManagerKroDelegated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KroDelegated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKroDelegated)
				if err := _AssetManager.contract.UnpackLog(event, "KroDelegated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKroDelegated is a log parse operation binding the contract event 0x334cabe84b7338f2bdd62070c02f24ffbcc7735e46f425fa401db349717e1328.
//
// Solidity: event KroDelegated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) ParseKroDelegated(log types.Log) (*AssetManagerKroDelegated, error) {
	event := new(AssetManagerKroDelegated)
	if err := _AssetManager.contract.UnpackLog(event, "KroDelegated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKroUndelegationFinalizedIterator is returned from FilterKroUndelegationFinalized and is used to iterate over the raw logs and unpacked data for KroUndelegationFinalized events raised by the AssetManager contract.
type AssetManagerKroUndelegationFinalizedIterator struct {
	Event *AssetManagerKroUndelegationFinalized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKroUndelegationFinalizedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKroUndelegationFinalized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKroUndelegationFinalized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKroUndelegationFinalizedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKroUndelegationFinalizedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKroUndelegationFinalized represents a KroUndelegationFinalized event raised by the AssetManager contract.
type AssetManagerKroUndelegationFinalized struct {
	Validator common.Address
	Delegator common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKroUndelegationFinalized is a free log retrieval operation binding the contract event 0x75cecc4cc21f0ebf6c86948f3a6a9bb934c49e4db83473fb8582ea706d135914.
//
// Solidity: event KroUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) FilterKroUndelegationFinalized(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKroUndelegationFinalizedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KroUndelegationFinalized", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKroUndelegationFinalizedIterator{contract: _AssetManager.contract, event: "KroUndelegationFinalized", logs: logs, sub: sub}, nil
}

// WatchKroUndelegationFinalized is a free log subscription operation binding the contract event 0x75cecc4cc21f0ebf6c86948f3a6a9bb934c49e4db83473fb8582ea706d135914.
//
// Solidity: event KroUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) WatchKroUndelegationFinalized(opts *bind.WatchOpts, sink chan<- *AssetManagerKroUndelegationFinalized, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KroUndelegationFinalized", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKroUndelegationFinalized)
				if err := _AssetManager.contract.UnpackLog(event, "KroUndelegationFinalized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKroUndelegationFinalized is a log parse operation binding the contract event 0x75cecc4cc21f0ebf6c86948f3a6a9bb934c49e4db83473fb8582ea706d135914.
//
// Solidity: event KroUndelegationFinalized(address indexed validator, address indexed delegator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) ParseKroUndelegationFinalized(log types.Log) (*AssetManagerKroUndelegationFinalized, error) {
	event := new(AssetManagerKroUndelegationFinalized)
	if err := _AssetManager.contract.UnpackLog(event, "KroUndelegationFinalized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerKroUndelegationInitiatedIterator is returned from FilterKroUndelegationInitiated and is used to iterate over the raw logs and unpacked data for KroUndelegationInitiated events raised by the AssetManager contract.
type AssetManagerKroUndelegationInitiatedIterator struct {
	Event *AssetManagerKroUndelegationInitiated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerKroUndelegationInitiatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerKroUndelegationInitiated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerKroUndelegationInitiated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerKroUndelegationInitiatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerKroUndelegationInitiatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerKroUndelegationInitiated represents a KroUndelegationInitiated event raised by the AssetManager contract.
type AssetManagerKroUndelegationInitiated struct {
	Validator common.Address
	Delegator common.Address
	Amount    *big.Int
	Shares    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterKroUndelegationInitiated is a free log retrieval operation binding the contract event 0xcc7aa86d5cfd922cf42cb1b77d79a7e530bbaa3264669ca2145b564ecc1bf769.
//
// Solidity: event KroUndelegationInitiated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) FilterKroUndelegationInitiated(opts *bind.FilterOpts, validator []common.Address, delegator []common.Address) (*AssetManagerKroUndelegationInitiatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "KroUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerKroUndelegationInitiatedIterator{contract: _AssetManager.contract, event: "KroUndelegationInitiated", logs: logs, sub: sub}, nil
}

// WatchKroUndelegationInitiated is a free log subscription operation binding the contract event 0xcc7aa86d5cfd922cf42cb1b77d79a7e530bbaa3264669ca2145b564ecc1bf769.
//
// Solidity: event KroUndelegationInitiated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) WatchKroUndelegationInitiated(opts *bind.WatchOpts, sink chan<- *AssetManagerKroUndelegationInitiated, validator []common.Address, delegator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}
	var delegatorRule []interface{}
	for _, delegatorItem := range delegator {
		delegatorRule = append(delegatorRule, delegatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "KroUndelegationInitiated", validatorRule, delegatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerKroUndelegationInitiated)
				if err := _AssetManager.contract.UnpackLog(event, "KroUndelegationInitiated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseKroUndelegationInitiated is a log parse operation binding the contract event 0xcc7aa86d5cfd922cf42cb1b77d79a7e530bbaa3264669ca2145b564ecc1bf769.
//
// Solidity: event KroUndelegationInitiated(address indexed validator, address indexed delegator, uint128 amount, uint128 shares)
func (_AssetManager *AssetManagerFilterer) ParseKroUndelegationInitiated(log types.Log) (*AssetManagerKroUndelegationInitiated, error) {
	event := new(AssetManagerKroUndelegationInitiated)
	if err := _AssetManager.contract.UnpackLog(event, "KroUndelegationInitiated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerRewardClaimFinalizedIterator is returned from FilterRewardClaimFinalized and is used to iterate over the raw logs and unpacked data for RewardClaimFinalized events raised by the AssetManager contract.
type AssetManagerRewardClaimFinalizedIterator struct {
	Event *AssetManagerRewardClaimFinalized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerRewardClaimFinalizedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerRewardClaimFinalized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerRewardClaimFinalized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerRewardClaimFinalizedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerRewardClaimFinalizedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerRewardClaimFinalized represents a RewardClaimFinalized event raised by the AssetManager contract.
type AssetManagerRewardClaimFinalized struct {
	Validator common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRewardClaimFinalized is a free log retrieval operation binding the contract event 0x668550d283aec3ba805f3e7c44d0bd95c1f847946fc605a7222d53394ca9e050.
//
// Solidity: event RewardClaimFinalized(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) FilterRewardClaimFinalized(opts *bind.FilterOpts, validator []common.Address) (*AssetManagerRewardClaimFinalizedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "RewardClaimFinalized", validatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerRewardClaimFinalizedIterator{contract: _AssetManager.contract, event: "RewardClaimFinalized", logs: logs, sub: sub}, nil
}

// WatchRewardClaimFinalized is a free log subscription operation binding the contract event 0x668550d283aec3ba805f3e7c44d0bd95c1f847946fc605a7222d53394ca9e050.
//
// Solidity: event RewardClaimFinalized(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) WatchRewardClaimFinalized(opts *bind.WatchOpts, sink chan<- *AssetManagerRewardClaimFinalized, validator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "RewardClaimFinalized", validatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerRewardClaimFinalized)
				if err := _AssetManager.contract.UnpackLog(event, "RewardClaimFinalized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRewardClaimFinalized is a log parse operation binding the contract event 0x668550d283aec3ba805f3e7c44d0bd95c1f847946fc605a7222d53394ca9e050.
//
// Solidity: event RewardClaimFinalized(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) ParseRewardClaimFinalized(log types.Log) (*AssetManagerRewardClaimFinalized, error) {
	event := new(AssetManagerRewardClaimFinalized)
	if err := _AssetManager.contract.UnpackLog(event, "RewardClaimFinalized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// AssetManagerRewardClaimInitiatedIterator is returned from FilterRewardClaimInitiated and is used to iterate over the raw logs and unpacked data for RewardClaimInitiated events raised by the AssetManager contract.
type AssetManagerRewardClaimInitiatedIterator struct {
	Event *AssetManagerRewardClaimInitiated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AssetManagerRewardClaimInitiatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AssetManagerRewardClaimInitiated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AssetManagerRewardClaimInitiated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AssetManagerRewardClaimInitiatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AssetManagerRewardClaimInitiatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AssetManagerRewardClaimInitiated represents a RewardClaimInitiated event raised by the AssetManager contract.
type AssetManagerRewardClaimInitiated struct {
	Validator common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRewardClaimInitiated is a free log retrieval operation binding the contract event 0x8ba9d52d538174baf05e0437c09555c022591dc617b7458fc02f53a1de9da490.
//
// Solidity: event RewardClaimInitiated(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) FilterRewardClaimInitiated(opts *bind.FilterOpts, validator []common.Address) (*AssetManagerRewardClaimInitiatedIterator, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _AssetManager.contract.FilterLogs(opts, "RewardClaimInitiated", validatorRule)
	if err != nil {
		return nil, err
	}
	return &AssetManagerRewardClaimInitiatedIterator{contract: _AssetManager.contract, event: "RewardClaimInitiated", logs: logs, sub: sub}, nil
}

// WatchRewardClaimInitiated is a free log subscription operation binding the contract event 0x8ba9d52d538174baf05e0437c09555c022591dc617b7458fc02f53a1de9da490.
//
// Solidity: event RewardClaimInitiated(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) WatchRewardClaimInitiated(opts *bind.WatchOpts, sink chan<- *AssetManagerRewardClaimInitiated, validator []common.Address) (event.Subscription, error) {

	var validatorRule []interface{}
	for _, validatorItem := range validator {
		validatorRule = append(validatorRule, validatorItem)
	}

	logs, sub, err := _AssetManager.contract.WatchLogs(opts, "RewardClaimInitiated", validatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AssetManagerRewardClaimInitiated)
				if err := _AssetManager.contract.UnpackLog(event, "RewardClaimInitiated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRewardClaimInitiated is a log parse operation binding the contract event 0x8ba9d52d538174baf05e0437c09555c022591dc617b7458fc02f53a1de9da490.
//
// Solidity: event RewardClaimInitiated(address indexed validator, uint128 amount)
func (_AssetManager *AssetManagerFilterer) ParseRewardClaimInitiated(log types.Log) (*AssetManagerRewardClaimInitiated, error) {
	event := new(AssetManagerRewardClaimInitiated)
	if err := _AssetManager.contract.UnpackLog(event, "RewardClaimInitiated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
