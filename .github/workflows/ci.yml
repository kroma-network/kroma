name: ci

on:
  push:
    branches:
      - dev
    tags:
      - '*.*.*'

jobs:
  prepare:
    name: Run CI
    runs-on:
      group: kroma-runners
      labels: kroma-ubuntu-22-04-16core

    outputs:
      kroma-node: ${{ steps.packages.outputs.kroma-node }}
      kroma-validator: ${{ steps.packages.outputs.kroma-validator }}
      kroma-batcher: ${{ steps.packages.outputs.kroma-batcher }}
      kroma-stateviz: ${{ steps.packages.outputs.kroma-stateviz }}
      docker-tag: ${{ steps.docker-image-name.outputs.docker-tag }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - run: go mod download

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly-f625d0fa7c51e65b4bf1e8f7931cd1c6e2e285e9

      - name: Build
        run: pnpm build

      - name: Docker Image Name
        id: docker-image-name
        run: |
          if [[ $GITHUB_REF_TYPE == 'branch' ]];
          then
            echo "docker-tag=dev-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
          else
            echo "docker-tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

  kroma-node:
    name: Kroma Node Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on:
      group: kroma-runners
      labels: kroma-ubuntu-22-04-16core
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kroma Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: op-node
          push: true
          tags: kromanetwork/node:${{ needs.prepare.outputs.docker-tag }}

  kroma-validator:
    name: Kroma Validator Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on:
      group: kroma-runners
      labels: kroma-ubuntu-22-04-16core
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kroma Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: kroma-validator
          push: true
          tags: kromanetwork/validator:${{ needs.prepare.outputs.docker-tag }}

  kroma-batcher:
    name: Kroma Batcher Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on:
      group: kroma-runners
      labels: kroma-ubuntu-22-04-16core
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kroma Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: op-batcher
          push: true
          tags: kromanetwork/batcher:${{ needs.prepare.outputs.docker-tag }}
